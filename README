server/client utilities passing messages via AMQP and using json-rpc format

Server
-----------------------------------------------------

Blix::Server.create(parser,handler,options)
Blix::Server.start

 create a server passing a parser object and  handler object and a hash of options.
 
 parser  : parses data from the server into message objects for a certain protocol. eg
           json-rpc  or xml
           
 handler : a method gets called on this object to perform th RPC

 Options :--
   
    :host     => 'localhost', the host of the AMQP broker
    :response => 'responses', the response exchange name
    :request  => 'requests'   the request exchange name
    :notify   => 'notify'     the notifications exchange name
 
eg:

class MyHandler < Blix::Server::Handler
   def foo(value,size)
      # do your application stuff here
   end
end

Blix::ServerMethod.new(:foo,:value,:size)       # register the method and parameter names here

require 'blix'
parser = Blix::JsonRpcParser.new
parser.valid_klass[:area] = [Server::Area]      # register your application classes => name mappings here

handler = MyHandler.new
handler.extend Blix::Server::CrudHandlerMethods
handler.extend Blix::Server::EchoHandlerMethods

Blix::Server.create(parser,handler,:host=>"myhost")
Blix::Server.start




Client
-----------------------------------------------------
require 'blix'
parser = Blix::JsonRpcParser.new
parser.valid_klass[:area] = [Client::Area]

client    = Blix::Client::AmqpConnection.create(parser,:host=>"myhost")

client.area_all

client.add_observer(self)
